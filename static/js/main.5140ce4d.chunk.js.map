{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","contactForm","state","name","number","contactValidation","props","contacts","find","contact","alert","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","onSubmit","reset","className","s","container","this","form","label","input","type","placeholder","onChange","button","Component","filter","contactList","onDeleteContact","list","map","id","item","text","onClick","Section","title","children","section","App","addContact","shortid","generate","makeFilter","visibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","ContactForm","Filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wB,mBCA1BD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,MAAQ,2BAA2B,UAAY,+BAA+B,MAAQ,6B,uCCA9KD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,UAAY,+BAA+B,KAAO,4B,wKCsF5JC,E,4MAlFbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,kBAAoB,WAAO,IAAD,EACC,EAAKH,MAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,OAGd,OAFqB,EAAKE,MAAlBC,SAEKC,MAAK,SAAAC,GAAO,OAAIN,IAASM,EAAQN,SAC5CO,MAAM,GAAD,OAAIP,EAAJ,6BACE,GAGI,KAATA,GAA0B,KAAXC,GACjBM,MAAM,0BACC,QAFT,G,EAKAC,aAAe,SAAAC,GAAU,IAAD,EACAA,EAAMC,cAAtBV,EADgB,EAChBA,KAAMW,EADU,EACVA,MAEd,EAAKC,SAAL,eAAiBZ,EAAOW,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,iBADgB,MAEG,EAAKf,MAAtBC,EAFc,EAEdA,KAAMC,EAFQ,EAERA,OAEV,EAAKC,sBAIT,EAAKC,MAAMY,SAASf,EAAMC,GAC1B,EAAKe,U,EAGPA,MAAQ,WACN,EAAKJ,SAAS,CAAEZ,KAAM,GAAIC,OAAQ,M,uDAIlC,OACA,qBAAKgB,UAAWC,IAAEC,UAAlB,SACE,uBAAMJ,SAAUK,KAAKP,aAAcI,UAAWC,IAAEG,KAAhD,UACE,wBAAOJ,UAAWC,IAAEI,MAApB,iBAEE,uBACCL,UAAWC,IAAEK,MACZC,KAAK,OACLxB,KAAK,OACLW,MAAOS,KAAKrB,MAAMC,KAClByB,YAAY,oBACZC,SAAUN,KAAKZ,kBAInB,wBAAOS,UAAWC,IAAEI,MAApB,mBAEE,uBACEL,UAAWC,IAAEK,MACbC,KAAK,MACLxB,KAAK,SACLW,MAAOS,KAAKrB,MAAME,OAClBwB,YAAY,sBACZC,SAAUN,KAAKZ,kBAGnB,wBAAQgB,KAAK,SAASP,UAAWC,IAAES,OAAnC,kC,GArEmBC,a,iBCaZC,MAdf,YAAsC,IAApBlB,EAAmB,EAAnBA,MAAOe,EAAY,EAAZA,SACvB,OACE,gCACE,uBAAOT,UAAWC,IAAEK,MAAOC,KAAK,OAAOb,MAAOA,EAAOe,SAAUA,EAC/DD,YAAY,+B,gBCJH,SAASK,EAAT,GAAqD,IAA9B1B,EAA6B,EAA7BA,SAAU2B,EAAmB,EAAnBA,gBAC9C,OACE,qBAAKd,UAAWC,IAAEC,UAAlB,SACA,oBAAIF,UAAWC,IAAEc,KAAjB,SACG5B,EAAS6B,KAAI,gBAAGC,EAAH,EAAGA,GAAIlC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAagB,UAAWC,IAAEiB,KAA1B,UACE,oBAAGlB,UAAWC,IAAEkB,KAAhB,UACGpC,EADH,KACWC,KAEX,wBACEuB,KAAK,SACLa,QAAS,kBAAMN,EAAgBG,IAC/BjB,UAAWC,IAAES,OAHf,sBAJOO,U,qBCQDI,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzB,OACE,sBAAKvB,UAAYC,IAAEuB,QAAnB,UACE,6BAAKF,IACJC,MCgFQE,E,4MA/Eb3C,MAAQ,CACNK,SAAU,CACR,CAAE8B,GAAI,OAAQlC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEiC,GAAI,OAAQlC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEiC,GAAI,OAAQlC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEiC,GAAI,OAAQlC,KAAM,iBAAkBC,OAAQ,cAEhD4B,OAAQ,I,EAGVc,WAAa,SAAC3C,EAAMC,GAClB,IAAMK,EAAU,CACd4B,GAAIU,IAAQC,WACZ7C,OACAC,UAGF,EAAKW,UAAS,gBAAGR,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEE,GAAH,mBAAeF,S,EAI3B0C,WAAa,SAAArC,GACX,EAAKG,SAAS,CAAEiB,OAAQpB,EAAMC,cAAcC,S,EAG9CoC,gBAAkB,WAAO,IAAD,EACO,EAAKhD,MAA1B8B,EADc,EACdA,OAAQzB,EADM,EACNA,SACV4C,EAAmBnB,EAAOoB,cAEhC,OAAO7C,EAASyB,QAAO,SAAAvB,GAAO,OAC5BA,EAAQN,KAAKiD,cAAcC,SAASF,O,EAIxCG,cAAgB,SAAAC,GACd,EAAKxC,UAAS,SAAAyC,GAAS,MAAK,CAC1BjD,SAAUiD,EAAUjD,SAASyB,QAAO,SAAAvB,GAAO,OAAIA,EAAQ4B,KAAOkB,U,kEAMhE,IAAMhD,EAAWkD,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMtD,GAC/BoD,GACDpC,KAAKR,SAAS,CAAER,SAAUoD,M,yCAIXH,EAAUM,GACvBvC,KAAKrB,MAAMK,WAAaiD,EAAUjD,WACpCwD,QAAQC,IAAI,gJAEZP,aAAaQ,QAAQ,WAAYL,KAAKM,UAAU3C,KAAKrB,MAAMK,c,+BAIrD,IAAD,EACsBgB,KAAKrB,MAA1B8B,EADD,EACCA,OAAQzB,EADT,EACSA,SACV2C,EAAkB3B,KAAK2B,kBAC7B,OACE,cAAC,EAAD,UACA,gCACE,2CACA,cAACiB,EAAD,CAAajD,SAAUK,KAAKuB,WAAYvC,SAAUA,IAElD,0CACA,cAAC6D,EAAD,CAAQtD,MAAOkB,EAAQH,SAAUN,KAAK0B,aACtC,cAAC,EAAD,CACE1C,SAAU2C,EACVhB,gBAAiBX,KAAK+B,yB,GAxEdvB,aCFlBsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5140ce4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1CHAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__oD30s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1PTzT\",\"button\":\"ContactForm_button__1oxpo\",\"input\":\"ContactForm_input__3SH0c\",\"container\":\"ContactForm_container__1IgvU\",\"label\":\"ContactForm_label__GHZBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__V1tYS\",\"text\":\"ContactList_text__3XVfD\",\"button\":\"ContactList_button__2Em3M\",\"container\":\"ContactList_container__I7-Lc\",\"list\":\"ContactList_list__1a7E-\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\n class contactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  contactValidation = () => {\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    if (contacts.find(contact => name === contact.name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return true;\r\n    }\r\n\r\n    if (name === '' || number === '') {\r\n      alert('Please enter all data');\r\n      return true;\r\n    }\r\n   };\r\n    handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    if (this.contactValidation()) {\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n//очищает введенные данные в инпуте\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <div className={s.container}>\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n           className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            placeholder=\"Сontact name\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input  \r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            placeholder=\"Сontact number\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\ncontactForm.propTypes = {\r\n    contacts: PropTypes.array,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\nexport default contactForm;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <input className={s.input} type=\"text\" value={value} onChange={onChange} \r\n      placeholder=\" Fined contacts by name\"\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nfilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default filter;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function contactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <div className={s.container}>\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.text}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n            className={s.button}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\ncontactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\n function Section({ title, children }) {\r\n  return (\r\n    <div className ={s.section}>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\nexport default  Section;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  makeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  \n//Взять из localStorage ранее сохраненные данные\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if(parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  //Сохранить в localStorage\n  componentDidUpdate(prevState,prevProps) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновилось поле контактов');\n      //Записывает в хранилище localStorage\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.visibleContacts();\n    return (\n      <Section>\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.makeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n        </div>\n        </Section>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}